geom_line(aes(y = acum(`Aves e ovos`)), size = 2, colour = 'tomato2', alpha = .65) +
geom_line(aes(y = acum(`Leites e derivados`)), size = 2, colour = 'red', alpha = .65) +
geom_line(aes(y = acum(`Panificados`)), size = 2, colour = 'tomato3', alpha = .65) +
geom_line(aes(y = acum(`Óleos e gorduras`)), size = 2, colour = 'red', alpha = .65) +
geom_line(aes(y = acum(`Bebidas e infusões`)), size = 2, colour = 'tomato3', alpha = .65) +
geom_line(aes(y = acum(`Enlatados e conservas`)), size = 2, colour = 'tomato2', alpha = .65) +
geom_line(aes(y = acum(`Sal e condimentos`)), size = 2, colour = 'dodgerblue3', alpha = .65) +
annotation_custom(grob = textGrob('Cereais leguminosas e\n oleaginosas', gp=gpar(fontsize=13.5, col="tomato3", fontface="bold")),  xmin = as.Date('2021-06-01'),
ymin = tail(acum(ipca_clean$`Cereais leguminosas e oleaginosas`), 1), ymax = tail(acum(ipca_clean$`Cereais leguminosas e oleaginosas`), 1),
xmax = as.Date('2022-5-3')) +
annotation_custom(grob = textGrob('Farinhas féculas e massas', gp=gpar(fontsize=13.5, col="red", fontface="bold")),  xmin = as.Date('2021-06-01'),
ymin = tail(acum(ipca_clean$`Farinhas féculas e massas`), 1), ymax = tail(acum(ipca_clean$`Farinhas féculas e massas`), 1)+0.01,
xmax = as.Date('2022-6-5')) +
annotation_custom(grob = textGrob('Tubérculos raízes e legumes', gp=gpar(fontsize=13.5, col="tomato2", fontface="bold")),  xmin = as.Date('2021-06-01'),
ymin = tail(acum(ipca_clean$`Tubérculos raízes e legumes`), 1), ymax = tail(acum(ipca_clean$`Tubérculos raízes e legumes`), 1)+0.015,
xmax = as.Date('2022-6-25')) +
annotation_custom(grob = textGrob('Açúcares e derivados', gp=gpar(fontsize=13.5, col="tomato", fontface="bold")),  xmin = as.Date('2021-06-01'),
ymin = tail(acum(ipca_clean$`Açúcares e derivados`), 1), ymax = tail(acum(ipca_clean$`Açúcares e derivados`), 1),
xmax = as.Date('2022-4-25')) +
annotation_custom(grob = textGrob('Hortaliças e verduras', gp=gpar(fontsize=13.5, col="tomato4", fontface="bold")),  xmin = as.Date('2021-06-01'),
ymin = tail(acum(ipca_clean$`Hortaliças e verduras`), 1), ymax = tail(acum(ipca_clean$`Hortaliças e verduras`), 1),
xmax = as.Date('2022-4-20')) +
annotation_custom(grob = textGrob('Frutas', gp=gpar(fontsize=13.5, col="tomato2", fontface="bold")),  xmin = as.Date('2021-06-01'),
ymin = tail(acum(ipca_clean$`Frutas`), 1), ymax = tail(acum(ipca_clean$`Frutas`), 1)+0.008,
xmax = as.Date('2021-12-9')) +
annotation_custom(grob = textGrob('Carnes', gp=gpar(fontsize=13.5, col="tomato3", fontface="bold")),  xmin = as.Date('2021-06-01'),
ymin = tail(acum(ipca_clean$`Carnes`), 1), ymax = tail(acum(ipca_clean$`Carnes`), 1),
xmax = as.Date('2021-12-17')) +
annotation_custom(grob = textGrob('Pescados', gp=gpar(fontsize=13.5, col="blue", fontface="bold")),  xmin = as.Date('2021-06-01'),
ymin = tail(acum(ipca_clean$`Pescados`), 1), ymax = tail(acum(ipca_clean$`Pescados`), 1),
xmax = as.Date('2022-1-9')) +
annotation_custom(grob = textGrob('Carnes e peixes industrializados', gp=gpar(fontsize=13.5, col="tomato4", fontface="bold")),  xmin = as.Date('2021-06-01'),
ymin = tail(acum(ipca_clean$`Carnes e peixes industrializados`), 1), ymax = tail(acum(ipca_clean$`Carnes e peixes industrializados`), 1),
xmax = as.Date('2022-7-28')) +
annotation_custom(grob = textGrob('Aves e ovos', gp=gpar(fontsize=13.5, col="tomato2", fontface="bold")),  xmin = as.Date('2021-06-01'),
ymin = tail(acum(ipca_clean$`Aves e ovos`), 1), ymax = tail(acum(ipca_clean$`Aves e ovos`), 1)+0.015,
xmax = as.Date('2022-2-3')) +
annotation_custom(grob = textGrob('Leites e derivados', gp=gpar(fontsize=13.5, col="red", fontface="bold")),  xmin = as.Date('2021-06-01'),
ymin = tail(acum(ipca_clean$`Leites e derivados`), 1), ymax = tail(acum(ipca_clean$`Leites e derivados`), 1)+0.01,
xmax = as.Date('2022-3-28')) +
annotation_custom(grob = textGrob('Panificados', gp=gpar(fontsize=13.5, col="tomato3", fontface="bold")),  xmin = as.Date('2021-06-01'),
ymin = tail(acum(ipca_clean$`Panificados`), 1), ymax = tail(acum(ipca_clean$`Panificados`), 1)-0.01,
xmax = as.Date('2022-1-25')) +
annotation_custom(grob = textGrob('Óleos e gorduras', gp=gpar(fontsize=13.5, col="red", fontface="bold")),  xmin = as.Date('2021-06-01'),
ymin = tail(acum(ipca_clean$`Óleos e gorduras`), 1), ymax = tail(acum(ipca_clean$`Óleos e gorduras`), 1),
xmax = as.Date('2022-3-15')) +
annotation_custom(grob = textGrob('Bebidas e infusões', gp=gpar(fontsize=13.5, col="tomato3", fontface="bold")),  xmin = as.Date('2021-06-01'),
ymin = tail(acum(ipca_clean$`Bebidas e infusões`), 1), ymax = tail(acum(ipca_clean$`Bebidas e infusões`), 1)+0.035,
xmax = as.Date('2022-4-2')) +
annotation_custom(grob = textGrob('Enlatados e conservas', gp=gpar(fontsize=13.5, col="tomato2", fontface="bold")),  xmin = as.Date('2021-06-01'),
ymin = tail(acum(ipca_clean$`Enlatados e conservas`), 1), ymax = tail(acum(ipca_clean$`Enlatados e conservas`), 1),
xmax = as.Date('2022-4-29')) +
annotation_custom(grob = textGrob('Sal e condimentos', gp=gpar(fontsize=13.5, col="dodgerblue3", fontface="bold")),  xmin = as.Date('2021-06-01'),
ymin = tail(acum(ipca_clean$`Sal e condimentos`), 1), ymax = tail(acum(ipca_clean$`Sal e condimentos`), 1)-0.02,
xmax = as.Date('2022-3-25')) +
labs(title = expression(bold('Índice Nacional de Preços ao Consumidor Amplo Acumulado')~'(Por Grupos)'),
subtitle = 'Período de Referência: Mar/2020 (Início da Pandemia no Brasil) - Ago/2021',
x = NULL, y = NULL,
caption = 'Fonte: SIDRA/IBGE\nElaboração Própria') +
geom_segment(aes(x=as.Date('2020-02-01'), xend=as.Date('2021-01-01'),y=tail(acum(`Índice geral`), 1)  + .022,
yend=tail(acum(`Índice geral`), 1)+ .022), size =16) +
geom_segment(aes(x=as.Date('2020-02-01'), xend=as.Date('2021-08-01'),y=tail(acum(`Índice geral`), 1),
yend=tail(acum(`Índice geral`), 1)), size = 2) +
annotation_custom(grob = textGrob(paste(sep = '', 'Inflação Acumulada ','', round(100*tail(acum(ipca_clean$`Índice geral`), 1), 2), '', '%' ),
gp=gpar(fontsize=18, col="white", fontface="bold")),  xmin = as.Date('2019-10-01'),
ymin = tail(acum(ipca_clean$`Índice geral`), 1) + .03, ymax = tail(acum(ipca_clean$`Índice geral`), 1) + .015,
as.Date('2021-5-01')) +
scale_y_continuous(limits = c(-.03,.65),
breaks = seq(-.05,.70,.05),labels = scales::percent) +
scale_x_date(limits = c(as.Date('2020-02-01'), as.Date('2022-04-15')), date_breaks = '4 month', labels=scales::date_format("%m-%Y")) +
theme_minimal() +
theme(plot.title = element_text(size = 18, colour = 'gray30'),
plot.subtitle = element_text(size = 18, colour = 'gray50'),
plot.caption = element_text(size = 16, colour = 'gray30'),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.y = element_text(size = 15, colour = 'gray50', hjust = 2),
axis.text.x = element_text(angle = 90, hjust = 1, size = 15,
colour = c(rep("gray50", 7), rep("white", 2))))
ggplot(ipca_clean, aes(x = Data)) +
geom_line(aes(y = acum(`Cereais leguminosas e oleaginosas`)), size = 2, colour = 'tomato3', alpha = .65) +
geom_line(aes(y = acum(`Farinhas féculas e massas`)), size = 2, colour = 'red', alpha = .65) +
geom_line(aes(y = acum(`Tubérculos raízes e legumes`)), size = 2, colour = 'tomato2', alpha = .65) +
geom_line(aes(y = acum(`Açúcares e derivados`)), size = 2, colour = 'tomato', alpha = .65) +
geom_line(aes(y = acum(`Hortaliças e verduras`)), size = 2, colour = 'tomato4', alpha = .65) +
geom_line(aes(y = acum(`Frutas`)), size = 2, colour = 'tomato2', alpha = .65) +
geom_line(aes(y = acum(`Carnes`)), size = 2, colour = 'tomato3', alpha = .65) +
geom_line(aes(y = acum(`Pescados`)), size = 2, colour = 'blue', alpha = .65) +
geom_line(aes(y = acum(`Carnes e peixes industrializados`)), size = 2, colour = 'tomato4', alpha = .65) +
geom_line(aes(y = acum(`Aves e ovos`)), size = 2, colour = 'tomato2', alpha = .65) +
geom_line(aes(y = acum(`Leites e derivados`)), size = 2, colour = 'red', alpha = .65) +
geom_line(aes(y = acum(`Panificados`)), size = 2, colour = 'tomato3', alpha = .65) +
geom_line(aes(y = acum(`Óleos e gorduras`)), size = 2, colour = 'red', alpha = .65) +
geom_line(aes(y = acum(`Bebidas e infusões`)), size = 2, colour = 'tomato3', alpha = .65) +
geom_line(aes(y = acum(`Enlatados e conservas`)), size = 2, colour = 'tomato2', alpha = .65) +
geom_line(aes(y = acum(`Sal e condimentos`)), size = 2, colour = 'dodgerblue3', alpha = .65) +
annotation_custom(grob = textGrob('Cereais leguminosas e\n oleaginosas', gp=gpar(fontsize=13.5, col="tomato3", fontface="bold")),  xmin = as.Date('2021-06-01'),
ymin = tail(acum(ipca_clean$`Cereais leguminosas e oleaginosas`), 1), ymax = tail(acum(ipca_clean$`Cereais leguminosas e oleaginosas`), 1),
xmax = as.Date('2022-5-3')) +
annotation_custom(grob = textGrob('Farinhas féculas e massas', gp=gpar(fontsize=13.5, col="red", fontface="bold")),  xmin = as.Date('2021-06-01'),
ymin = tail(acum(ipca_clean$`Farinhas féculas e massas`), 1), ymax = tail(acum(ipca_clean$`Farinhas féculas e massas`), 1)+0.01,
xmax = as.Date('2022-6-5')) +
annotation_custom(grob = textGrob('Tubérculos raízes e legumes', gp=gpar(fontsize=13.5, col="tomato2", fontface="bold")),  xmin = as.Date('2021-06-01'),
ymin = tail(acum(ipca_clean$`Tubérculos raízes e legumes`), 1), ymax = tail(acum(ipca_clean$`Tubérculos raízes e legumes`), 1)+0.015,
xmax = as.Date('2022-6-25')) +
annotation_custom(grob = textGrob('Açúcares e derivados', gp=gpar(fontsize=13.5, col="tomato", fontface="bold")),  xmin = as.Date('2021-06-01'),
ymin = tail(acum(ipca_clean$`Açúcares e derivados`), 1), ymax = tail(acum(ipca_clean$`Açúcares e derivados`), 1),
xmax = as.Date('2022-4-25')) +
annotation_custom(grob = textGrob('Hortaliças e verduras', gp=gpar(fontsize=13.5, col="tomato4", fontface="bold")),  xmin = as.Date('2021-06-01'),
ymin = tail(acum(ipca_clean$`Hortaliças e verduras`), 1), ymax = tail(acum(ipca_clean$`Hortaliças e verduras`), 1),
xmax = as.Date('2022-4-20')) +
annotation_custom(grob = textGrob('Frutas', gp=gpar(fontsize=13.5, col="tomato2", fontface="bold")),  xmin = as.Date('2021-06-01'),
ymin = tail(acum(ipca_clean$`Frutas`), 1), ymax = tail(acum(ipca_clean$`Frutas`), 1)+0.008,
xmax = as.Date('2021-12-9')) +
annotation_custom(grob = textGrob('Carnes', gp=gpar(fontsize=13.5, col="tomato3", fontface="bold")),  xmin = as.Date('2021-06-01'),
ymin = tail(acum(ipca_clean$`Carnes`), 1), ymax = tail(acum(ipca_clean$`Carnes`), 1),
xmax = as.Date('2021-12-17')) +
annotation_custom(grob = textGrob('Pescados', gp=gpar(fontsize=13.5, col="blue", fontface="bold")),  xmin = as.Date('2021-06-01'),
ymin = tail(acum(ipca_clean$`Pescados`), 1), ymax = tail(acum(ipca_clean$`Pescados`), 1),
xmax = as.Date('2022-1-9')) +
annotation_custom(grob = textGrob('Carnes e peixes industrializados', gp=gpar(fontsize=13.5, col="tomato4", fontface="bold")),  xmin = as.Date('2021-06-01'),
ymin = tail(acum(ipca_clean$`Carnes e peixes industrializados`), 1), ymax = tail(acum(ipca_clean$`Carnes e peixes industrializados`), 1),
xmax = as.Date('2022-7-28')) +
annotation_custom(grob = textGrob('Aves e ovos', gp=gpar(fontsize=13.5, col="tomato2", fontface="bold")),  xmin = as.Date('2021-06-01'),
ymin = tail(acum(ipca_clean$`Aves e ovos`), 1), ymax = tail(acum(ipca_clean$`Aves e ovos`), 1)+0.015,
xmax = as.Date('2022-2-3')) +
annotation_custom(grob = textGrob('Leites e derivados', gp=gpar(fontsize=13.5, col="red", fontface="bold")),  xmin = as.Date('2021-06-01'),
ymin = tail(acum(ipca_clean$`Leites e derivados`), 1), ymax = tail(acum(ipca_clean$`Leites e derivados`), 1)+0.01,
xmax = as.Date('2022-3-28')) +
annotation_custom(grob = textGrob('Panificados', gp=gpar(fontsize=13.5, col="tomato3", fontface="bold")),  xmin = as.Date('2021-06-01'),
ymin = tail(acum(ipca_clean$`Panificados`), 1), ymax = tail(acum(ipca_clean$`Panificados`), 1)-0.01,
xmax = as.Date('2022-1-25')) +
annotation_custom(grob = textGrob('Óleos e gorduras', gp=gpar(fontsize=13.5, col="red", fontface="bold")),  xmin = as.Date('2021-06-01'),
ymin = tail(acum(ipca_clean$`Óleos e gorduras`), 1), ymax = tail(acum(ipca_clean$`Óleos e gorduras`), 1),
xmax = as.Date('2022-3-15')) +
annotation_custom(grob = textGrob('Bebidas e infusões', gp=gpar(fontsize=13.5, col="tomato3", fontface="bold")),  xmin = as.Date('2021-06-01'),
ymin = tail(acum(ipca_clean$`Bebidas e infusões`), 1), ymax = tail(acum(ipca_clean$`Bebidas e infusões`), 1)+0.035,
xmax = as.Date('2022-4-2')) +
annotation_custom(grob = textGrob('Enlatados e conservas', gp=gpar(fontsize=13.5, col="tomato2", fontface="bold")),  xmin = as.Date('2021-06-01'),
ymin = tail(acum(ipca_clean$`Enlatados e conservas`), 1), ymax = tail(acum(ipca_clean$`Enlatados e conservas`), 1),
xmax = as.Date('2022-4-29')) +
annotation_custom(grob = textGrob('Sal e condimentos', gp=gpar(fontsize=13.5, col="dodgerblue3", fontface="bold")),  xmin = as.Date('2021-06-01'),
ymin = tail(acum(ipca_clean$`Sal e condimentos`), 1), ymax = tail(acum(ipca_clean$`Sal e condimentos`), 1)-0.02,
xmax = as.Date('2022-3-25')) +
labs(title = expression(bold('Índice Nacional de Preços ao Consumidor Amplo Acumulado')~'(Por Grupos)'),
subtitle = 'Período de Referência: Mar/2020 (Início da Pandemia no Brasil) - Ago/2021',
x = NULL, y = NULL,
caption = 'Fonte: SIDRA/IBGE\nElaboração Própria') +
geom_segment(aes(x=as.Date('2020-02-01'), xend=as.Date('2021-01-01'),y=tail(acum(`Índice geral`), 1)  + .022,
yend=tail(acum(`Índice geral`), 1)+ .022), size =16) +
geom_segment(aes(x=as.Date('2020-02-01'), xend=as.Date('2021-08-01'),y=tail(acum(`Índice geral`), 1),
yend=tail(acum(`Índice geral`), 1)), size = 2) +
annotation_custom(grob = textGrob(paste(sep = '', 'Inflação Acumulada ','', round(100*tail(acum(ipca_clean$`Índice geral`), 1), 2), '', '%' ),
gp=gpar(fontsize=18, col="white", fontface="bold")),  xmin = as.Date('2019-10-01'),
ymin = tail(acum(ipca_clean$`Índice geral`), 1) + .03, ymax = tail(acum(ipca_clean$`Índice geral`), 1) + .015,
as.Date('2021-5-01')) +
scale_y_continuous(limits = c(-.03,.65),
breaks = seq(-.05,.70,.05),labels = scales::percent) +
scale_x_date(limits = c(as.Date('2020-02-01'), as.Date('2022-04-15')), date_breaks = '4 month', labels=scales::date_format("%m-%Y")) +
theme_minimal() +
theme(plot.title = element_text(size = 18, colour = 'gray30'),
plot.subtitle = element_text(size = 18, colour = 'gray50'),
plot.caption = element_text(size = 16, colour = 'gray30'),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.y = element_text(size = 15, colour = 'gray50', hjust = 2),
axis.text.x = element_text(angle = 90, hjust = 1, size = 15,
colour = c(rep("gray50", 5), rep("white", 2))))
ggplot(ipca_clean, aes(x = Data)) +
geom_line(aes(y = acum(`Cereais leguminosas e oleaginosas`)), size = 2, colour = 'tomato3', alpha = .65) +
geom_line(aes(y = acum(`Farinhas féculas e massas`)), size = 2, colour = 'red', alpha = .65) +
geom_line(aes(y = acum(`Tubérculos raízes e legumes`)), size = 2, colour = 'tomato2', alpha = .65) +
geom_line(aes(y = acum(`Açúcares e derivados`)), size = 2, colour = 'tomato', alpha = .65) +
geom_line(aes(y = acum(`Hortaliças e verduras`)), size = 2, colour = 'tomato4', alpha = .65) +
geom_line(aes(y = acum(`Frutas`)), size = 2, colour = 'tomato2', alpha = .65) +
geom_line(aes(y = acum(`Carnes`)), size = 2, colour = 'tomato3', alpha = .65) +
geom_line(aes(y = acum(`Pescados`)), size = 2, colour = 'blue', alpha = .65) +
geom_line(aes(y = acum(`Carnes e peixes industrializados`)), size = 2, colour = 'tomato4', alpha = .65) +
geom_line(aes(y = acum(`Aves e ovos`)), size = 2, colour = 'tomato2', alpha = .65) +
geom_line(aes(y = acum(`Leites e derivados`)), size = 2, colour = 'red', alpha = .65) +
geom_line(aes(y = acum(`Panificados`)), size = 2, colour = 'tomato3', alpha = .65) +
geom_line(aes(y = acum(`Óleos e gorduras`)), size = 2, colour = 'red', alpha = .65) +
geom_line(aes(y = acum(`Bebidas e infusões`)), size = 2, colour = 'tomato3', alpha = .65) +
geom_line(aes(y = acum(`Enlatados e conservas`)), size = 2, colour = 'tomato2', alpha = .65) +
geom_line(aes(y = acum(`Sal e condimentos`)), size = 2, colour = 'dodgerblue3', alpha = .65) +
annotation_custom(grob = textGrob('Cereais leguminosas e\n oleaginosas', gp=gpar(fontsize=13.5, col="tomato3", fontface="bold")),  xmin = as.Date('2021-06-01'),
ymin = tail(acum(ipca_clean$`Cereais leguminosas e oleaginosas`), 1), ymax = tail(acum(ipca_clean$`Cereais leguminosas e oleaginosas`), 1),
xmax = as.Date('2022-5-3')) +
annotation_custom(grob = textGrob('Farinhas féculas e massas', gp=gpar(fontsize=13.5, col="red", fontface="bold")),  xmin = as.Date('2021-06-01'),
ymin = tail(acum(ipca_clean$`Farinhas féculas e massas`), 1), ymax = tail(acum(ipca_clean$`Farinhas féculas e massas`), 1)+0.01,
xmax = as.Date('2022-6-5')) +
annotation_custom(grob = textGrob('Tubérculos raízes e legumes', gp=gpar(fontsize=13.5, col="tomato2", fontface="bold")),  xmin = as.Date('2021-06-01'),
ymin = tail(acum(ipca_clean$`Tubérculos raízes e legumes`), 1), ymax = tail(acum(ipca_clean$`Tubérculos raízes e legumes`), 1)+0.015,
xmax = as.Date('2022-6-25')) +
annotation_custom(grob = textGrob('Açúcares e derivados', gp=gpar(fontsize=13.5, col="tomato", fontface="bold")),  xmin = as.Date('2021-06-01'),
ymin = tail(acum(ipca_clean$`Açúcares e derivados`), 1), ymax = tail(acum(ipca_clean$`Açúcares e derivados`), 1),
xmax = as.Date('2022-4-25')) +
annotation_custom(grob = textGrob('Hortaliças e verduras', gp=gpar(fontsize=13.5, col="tomato4", fontface="bold")),  xmin = as.Date('2021-06-01'),
ymin = tail(acum(ipca_clean$`Hortaliças e verduras`), 1), ymax = tail(acum(ipca_clean$`Hortaliças e verduras`), 1),
xmax = as.Date('2022-4-20')) +
annotation_custom(grob = textGrob('Frutas', gp=gpar(fontsize=13.5, col="tomato2", fontface="bold")),  xmin = as.Date('2021-06-01'),
ymin = tail(acum(ipca_clean$`Frutas`), 1), ymax = tail(acum(ipca_clean$`Frutas`), 1)+0.008,
xmax = as.Date('2021-12-9')) +
annotation_custom(grob = textGrob('Carnes', gp=gpar(fontsize=13.5, col="tomato3", fontface="bold")),  xmin = as.Date('2021-06-01'),
ymin = tail(acum(ipca_clean$`Carnes`), 1), ymax = tail(acum(ipca_clean$`Carnes`), 1),
xmax = as.Date('2021-12-17')) +
annotation_custom(grob = textGrob('Pescados', gp=gpar(fontsize=13.5, col="blue", fontface="bold")),  xmin = as.Date('2021-06-01'),
ymin = tail(acum(ipca_clean$`Pescados`), 1), ymax = tail(acum(ipca_clean$`Pescados`), 1),
xmax = as.Date('2022-1-9')) +
annotation_custom(grob = textGrob('Carnes e peixes industrializados', gp=gpar(fontsize=13.5, col="tomato4", fontface="bold")),  xmin = as.Date('2021-06-01'),
ymin = tail(acum(ipca_clean$`Carnes e peixes industrializados`), 1), ymax = tail(acum(ipca_clean$`Carnes e peixes industrializados`), 1),
xmax = as.Date('2022-7-28')) +
annotation_custom(grob = textGrob('Aves e ovos', gp=gpar(fontsize=13.5, col="tomato2", fontface="bold")),  xmin = as.Date('2021-06-01'),
ymin = tail(acum(ipca_clean$`Aves e ovos`), 1), ymax = tail(acum(ipca_clean$`Aves e ovos`), 1)+0.015,
xmax = as.Date('2022-2-3')) +
annotation_custom(grob = textGrob('Leites e derivados', gp=gpar(fontsize=13.5, col="red", fontface="bold")),  xmin = as.Date('2021-06-01'),
ymin = tail(acum(ipca_clean$`Leites e derivados`), 1), ymax = tail(acum(ipca_clean$`Leites e derivados`), 1)+0.01,
xmax = as.Date('2022-3-28')) +
annotation_custom(grob = textGrob('Panificados', gp=gpar(fontsize=13.5, col="tomato3", fontface="bold")),  xmin = as.Date('2021-06-01'),
ymin = tail(acum(ipca_clean$`Panificados`), 1), ymax = tail(acum(ipca_clean$`Panificados`), 1)-0.01,
xmax = as.Date('2022-1-25')) +
annotation_custom(grob = textGrob('Óleos e gorduras', gp=gpar(fontsize=13.5, col="red", fontface="bold")),  xmin = as.Date('2021-06-01'),
ymin = tail(acum(ipca_clean$`Óleos e gorduras`), 1), ymax = tail(acum(ipca_clean$`Óleos e gorduras`), 1),
xmax = as.Date('2022-3-15')) +
annotation_custom(grob = textGrob('Bebidas e infusões', gp=gpar(fontsize=13.5, col="tomato3", fontface="bold")),  xmin = as.Date('2021-06-01'),
ymin = tail(acum(ipca_clean$`Bebidas e infusões`), 1), ymax = tail(acum(ipca_clean$`Bebidas e infusões`), 1)+0.035,
xmax = as.Date('2022-4-2')) +
annotation_custom(grob = textGrob('Enlatados e conservas', gp=gpar(fontsize=13.5, col="tomato2", fontface="bold")),  xmin = as.Date('2021-06-01'),
ymin = tail(acum(ipca_clean$`Enlatados e conservas`), 1), ymax = tail(acum(ipca_clean$`Enlatados e conservas`), 1),
xmax = as.Date('2022-4-29')) +
annotation_custom(grob = textGrob('Sal e condimentos', gp=gpar(fontsize=13.5, col="dodgerblue3", fontface="bold")),  xmin = as.Date('2021-06-01'),
ymin = tail(acum(ipca_clean$`Sal e condimentos`), 1), ymax = tail(acum(ipca_clean$`Sal e condimentos`), 1)-0.02,
xmax = as.Date('2022-3-25')) +
labs(title = expression(bold('Inflação Acumulada por Itens')~'(Alimentação no Domicílio)'),
subtitle = 'Período de Referência: Mar/2020 (Início da Pandemia no Brasil) - Ago/2021',
x = NULL, y = NULL,
caption = 'Fonte: SIDRA/IBGE\nElaboração Própria') +
geom_segment(aes(x=as.Date('2020-02-01'), xend=as.Date('2021-01-01'),y=tail(acum(`Índice geral`), 1)  + .022,
yend=tail(acum(`Índice geral`), 1)+ .022), size =16) +
geom_segment(aes(x=as.Date('2020-02-01'), xend=as.Date('2021-08-01'),y=tail(acum(`Índice geral`), 1),
yend=tail(acum(`Índice geral`), 1)), size = 2) +
annotation_custom(grob = textGrob(paste(sep = '', 'Inflação Acumulada ','', round(100*tail(acum(ipca_clean$`Índice geral`), 1), 2), '', '%' ),
gp=gpar(fontsize=18, col="white", fontface="bold")),  xmin = as.Date('2019-10-01'),
ymin = tail(acum(ipca_clean$`Índice geral`), 1) + .03, ymax = tail(acum(ipca_clean$`Índice geral`), 1) + .015,
as.Date('2021-5-01')) +
scale_y_continuous(limits = c(-.03,.65),
breaks = seq(-.05,.70,.05),labels = scales::percent) +
scale_x_date(limits = c(as.Date('2020-02-01'), as.Date('2022-04-15')), date_breaks = '4 month', labels=scales::date_format("%m-%Y")) +
theme_minimal() +
theme(plot.title = element_text(size = 18, colour = 'gray30'),
plot.subtitle = element_text(size = 18, colour = 'gray50'),
plot.caption = element_text(size = 16, colour = 'gray30'),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.y = element_text(size = 15, colour = 'gray50', hjust = 2),
axis.text.x = element_text(angle = 90, hjust = 1, size = 15,
colour = c(rep("gray50", 5), rep("white", 2))))
plot(rnorm(56), type='l')
paste("gagag", "fafaf")
titulo <- readline("Nome do artigo :")
tab <- readline("Numero de tabelas :")
eq <- readline("Numero de equações :")
paste("O orçamento para o artigo", titulo,
"foi de:",
int(pag) + int(tab)*15 + int(fig)*10 + int(eq)*3 + bib)
titulo <- readline("Nome do artigo :")
tab <- readline("Numero de tabelas :")
eq <- readline("Numero de equações :")
paste("O orçamento para o artigo", titulo,
"foi de:",
Int(pag) + Int(tab)*15 + Int(fig)*10 + Int(eq)*3 + bib)
titulo <- readline("Nome do artigo :")
tab <- readline("Numero de tabelas :")
eq <- readline("Numero de equações :")
paste("O orçamento para o artigo", titulo,
"foi de:",
as.Integer(pag) + as.Integer(tab)*15 + as.Integer(fig)*10 + as.Integer(eq)*3 + bib)
titulo <- readline("Nome do artigo :")
tab <- readline("Numero de tabelas :")
eq <- readline("Numero de equações :")
paste("O orçamento para o artigo", titulo,
"foi de:",
as.integer(pag) + as.integer(tab)*15 + as.integer(fig)*10 + as.integer(eq)*3 + bib)
titulo <- readline("Nome do artigo :")
pag <- readline("Numero de paginas :")
tab <- readline("Numero de tabelas :")
fig <- readline("Numero de figuras :")
eq <- readline("Numero de equações :")
bib <- readline("Numero de referencias bibliograficas :")
paste("O orçamento para o artigo", titulo,
"foi de:",
as.integer(pag) + as.integer(tab)*15 + as.integer(fig)*10 + as.integer(eq)*3 + bib)
paste("O orçamento para o artigo", titulo,"foi de:",as.integer(pag) + as.integer(tab)*15 + as.integer(fig)*10 + as.integer(eq)*3 + bib)
paste("O orçamento para o artigo", titulo,"foi de:",as.integer(pag) + as.integer(tab)*15 + as.integer(fig)*10 + as.integer(eq)*3 + bib)
paste("O orçamento para o artigo", titulo,"foi de:",as.integer(pag) + as.integer(tab)*15 + as.integer(fig)*10 + as.integer(eq)*3 + bib)
paste("O orçamento para o artigo", titulo,"foi de:",
as.character(as.integer(pag) +
as.integer(tab)*15 +
as.integer(fig)*10 +
as.integer(eq)*3 +
bib))
paste("O orçamento para o artigo", titulo)
paste("O orçamento para o artigo", titulo), "foi de:")
paste("O orçamento para o artigo", titulo, "foi de:")
paste("O orçamento para o artigo", titulo, "foi de:",
as.character(as.integer(pag)))
paste("O orçamento para o artigo", titulo, "foi de:",
as.character(as.integer(pag) +
as.integer(tab)*15))
paste("O orçamento para o artigo", titulo, "foi de:",
as.character(as.integer(pag) +
as.integer(tab)*15 +
as.integer(fig)*10))
paste("O orçamento para o artigo", titulo, "foi de:",
as.character(as.integer(pag) +
as.integer(tab)*15 +
as.integer(fig)*10 +
as.integer(eq)*3))
paste("O orçamento para o artigo", titulo, "foi de:",
as.character(as.integer(pag) +
as.integer(tab)*15 +
as.integer(fig)*10 +
as.integer(eq)*3 +
as.integer(bib)))
titulo <- readline("Nome do artigo :")
tab <- readline("Numero de tabelas :")
eq <- readline("Numero de equações :")
titulo <- readline("Nome do artigo :")
pag <- readline("Numero de paginas :")
tab <- readline("Numero de tabelas :")
fig <- readline("Numero de figuras :")
eq <- readline("Numero de equações :")
bib <- readline("Numero de referencias bibliograficas :")
paste("O orçamento para o artigo", titulo, "foi de:",
as.character(as.integer(pag) +
as.integer(tab)*15 +
as.integer(fig)*10 +
as.integer(eq)*3 +
as.integer(bib)))
titulo <- readline("Nome do artigo :")
pag <- readline("Numero de paginas :")
tab <- readline("Numero de tabelas :")
fig <- readline("Numero de figuras :")
eq <- readline("Numero de equações :")
bib <- readline("Numero de referencias bibliograficas :")
paste("O orçamento para o artigo", titulo, "foi de:",
as.character(as.integer(pag) +
as.integer(tab)*15 +
as.integer(fig)*10 +
as.integer(eq)*3 +
as.integer(bib)))
titulo <- readline("Nome do artigo :")
pag <- readline("Numero de paginas :")
tab <- readline("Numero de tabelas :")
fig <- readline("Numero de figuras :")
eq <- readline("Numero de equações :")
eq <- readline("Numero de equações :")
bib <- readline("Numero de referencias bibliograficas :")
paste("O orçamento para o artigo", titulo, "foi de:",
as.character(as.integer(pag) +
as.integer(tab)*15 +
as.integer(fig)*10 +
as.integer(eq)*3 +
as.integer(bib)))
126 + 102 + 73 + 308
func<- function(x){
y<-c()
for (i in length(x)){
y[i]<-sum((-1)^n*x[i]^(2^n))
}
return(y)
}
x <- c(1,2,3,4)
func(x)
Sys.which("pdflatex")
pais <- c("alemanha", 'brasil', 'canada', 'cuba', 'portugal')
seq(1:10)
seq(rep(1:10))
seq(rep(1:10, 10))
rep(seq(1:10))
rep(seq(1:10), 1)
rep(seq(1:10), 2)
seq(rep(1:10, 2))
seq(rep(1:10), 2)
quit()
fatorial_simples <- function(x){
fat <- 1
if(x == 0){
return(fat)
} else{
for(i in 1:x){
fat <- fat*i
}
return(fat)
}
}
fatorial_simples(3)
fatorial_simples(30)
fatorial_simples(5)
fatorial_while <- function(x){
fat <- 1
if(x == 0){
return(fat)
} else{
while(x > 1){
fat <- fat*x
x <- x - 1
}
return(fat)
}
}
fatorial_while(1)
fatorial_while(2)
fatorial_while(3)
fatorial_while(4)
fatorial_while(5)
fatorial_while(4)
fatorial_while(40)
fatorial_while(400)
fatorial_recurssion <- function(x){
if(x == 0){
return(1)
}
}
fatorial_recurssion(0)
fatorial_recurssion(10)
fatorial_recurssion <- function(x){
if(x == 0){
return(1)
} else{
return(x*fatorial_recurssion(x-1))
}
}
fatorial_recurssion(2)
fatorial_recurssion(3)
fatorial_recurssion(4)
x <- (1:20)^2
plot(x)
x <- (1:30)^2
plot(x)
setwd('E:\\backup_8112020\\Just for Fun\\R\\sistema_prisional_brasil')
library(tidyverse)
data <- read_csv('data\\copia-de-dadosformularios-jan-jun2019.csv')
View(data)
head(data)
head(data)
names(data)
data <- read_csv2('data\\copia-de-dadosformularios-jan-jun2019.csv')
View(data)
data <- read_csv2('data\\copia-de-dadosformularios-jan-jun2019.csv', locale = locale(encoding = 'latin1'))
View(data)
View(data)
names(data)
View(data)
data <- read_csv2('data\\copia-de-dadosformularios-jan-jun2019.csv', locale = locale(encoding = 'latin1')) %>%
select(UF)
View(data)
data <- read_csv2('data\\copia-de-dadosformularios-jan-jun2019.csv', locale = locale(encoding = 'latin1')) %>%
select(UF, `Município`)
View(data)
data <- read_csv2('data\\copia-de-dadosformularios-jan-jun2019.csv', locale = locale(encoding = 'latin1')) %>%
select(UF, `Município`,
`1.3 Capacidade do estabelecimento | Presos provisórios | Feminino`,
`1.3 Capacidade do estabelecimento | Presos provisórios | Masculino`,
`1.3 Capacidade do estabelecimento | Presos provisórios | Total`)
View(data)
data <- read_csv2('data\\copia-de-dadosformularios-jan-jun2019.csv', locale = locale(encoding = 'latin1')) %>%
select(UF, `Município`, `1.3 Capacidade do estabelecimento | Masculino | Total`,
`1.3 Capacidade do estabelecimento | Feminino | Total`,
`2.7 Há local específico para visitação?`,
`2.8 Há local específico para visita íntima?`,
# `4.1 População prisional | Presos provisórios (sem condenação) | Justiça Estadual Masculino`, # adicionar `outros`
# `4.1 População prisional | Presos provisórios (sem condenação) | Justiça Estadual Feminimo`,
# `4.1 População prisional | Presos provisórios (sem condenação) | Justiça Federal Masculino`,
# `4.1 População prisional | Presos provisórios (sem condenação) | Justiça Federal Feminino`,
`4.1 População prisional | Presos provisórios (sem condenação) | Total`,
# `4.1 População prisional | Presos sentenciados - regime fechado | Justiça Estadual Masculino`,
# `4.1 População prisional | Presos sentenciados - regime fechado | Justiça Estadual Feminino`,
# `4.1 População prisional | Presos sentenciados - regime fechado | Justiça Federal Masculino`,
# `4.1 População prisional | Presos sentenciados - regime fechado | Justiça Federal Feminino`,
`4.1 População prisional | Presos sentenciados - regime fechado | Total`,
# `4.1 População prisional | Presos sentenciados - regime semiaberto | Justiça Estadual Masculino`,
# `4.1 População prisional | Presos sentenciados - regime semiaberto | Justiça Estadual Feminino`,
# `4.1 População prisional | Presos sentenciados - regime semiaberto | Justiça Federal Masculino`,
# `4.1 População prisional | Presos sentenciados - regime semiaberto | Justiça Federal Feminino`,
`4.1 População prisional | Presos sentenciados - regime semiaberto | Total`,
`4.1 População prisional | Presos sentenciados - regime aberto | Total`,
`4.1 População prisional | Medida de segurança - internação | Total`,
`4.1 População prisional | Medida de segurança - tratamento ambulatorial | Total`,
`4.1 População prisional | Total`,
`5.1 Quantidade de pessoas privadas de liberdade por faixa etária | 18 a 24 anos | Masculino`,
`5.1 Quantidade de pessoas privadas de liberdade por faixa etária | 18 a 24 anos | Feminino`,
`5.1 Quantidade de pessoas privadas de liberdade por faixa etária | 18 a 24 anos | Total`,
`5.1 Quantidade de pessoas privadas de liberdade por faixa etária | 25 a 29 anos | Masculino`,
`5.1 Quantidade de pessoas privadas de liberdade por faixa etária | 25 a 29 anos | Feminino`,
`5.1 Quantidade de pessoas privadas de liberdade por faixa etária | 25 a 29 anos | Total`,
`5.1 Quantidade de pessoas privadas de liberdade por faixa etária | 30 a 34 anos | Masculino`,
`5.1 Quantidade de pessoas privadas de liberdade por faixa etária | 30 a 34 anos | Feminino`,
`5.1 Quantidade de pessoas privadas de liberdade por faixa etária | 30 a 34 anos | Total`,
`5.1 Quantidade de pessoas privadas de liberdade por faixa etária | 35 a 45 anos | Masculino`,
`5.1 Quantidade de pessoas privadas de liberdade por faixa etária | 35 a 45 anos | Feminino`,
`5.1 Quantidade de pessoas privadas de liberdade por faixa etária | 35 a 45 anos | Total`,
`5.1 Quantidade de pessoas privadas de liberdade por faixa etária | 46 a 60 anos | Masculino`,
`5.1 Quantidade de pessoas privadas de liberdade por faixa etária | 46 a 60 anos | Feminino`,
`5.1 Quantidade de pessoas privadas de liberdade por faixa etária | 46 a 60 anos | Total`,
`5.1 Quantidade de pessoas privadas de liberdade por faixa etária | 61 a 70 anos | Masculino`,
`5.1 Quantidade de pessoas privadas de liberdade por faixa etária | 61 a 70 anos | Feminino`,
`5.1 Quantidade de pessoas privadas de liberdade por faixa etária | 61 a 70 anos | Total`,
`5.1 Quantidade de pessoas privadas de liberdade por faixa etária | Mais de 70 anos | Masculino`,
`5.1 Quantidade de pessoas privadas de liberdade por faixa etária | Mais de 70 anos | Feminino`,
`5.1 Quantidade de pessoas privadas de liberdade por faixa etária | Mais de 70 anos | Total`)
View(data)
